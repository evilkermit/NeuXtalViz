# Necessary for supervisorctl to work
[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=true                ; start in foreground if true; default false

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

# Necessary for supervisorctl to work
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:trame]
command=/bin/bash /run_trame.sh
stdout_logfile=/dev/fd/1  ; redirect stdout to supervisord process so Galaxy picks it up
stdout_logfile_maxbytes=0 ; disable capture mode
stderr_logfile=/dev/fd/2  ; redirect stderr to supervisord process so Galaxy picks it up
stderr_logfile_maxbytes=0 ; disable capture mode

[program:nginx]
command=/bin/bash /run_nginx.sh

# This shuts down supervisord in response to fatal events to any of its child processes.
[eventlistener:quit_on_fatal]
command=/bin/bash -c 'echo "READY"; while read -r line; do echo "$line"; supervisorctl shutdown; done'
events=PROCESS_STATE_FATAL
